/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus Prime License Agreement,
the Altera MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Altera and sold by Altera or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 8000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek11[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek11[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek11[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek11[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek12[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek12[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek12[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek12[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek13[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek13[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek13[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek13[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek21")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek21[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek21[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek21[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek21[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek22[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek22[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek22[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek22[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek23")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek23[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek23[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek23[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek23[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek31")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek31[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek31[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek31[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek31[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek32")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek32[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek32[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek32[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek32[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek33")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek33[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("ek33[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("ek33[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("ek33[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("dk11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk11[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk11[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk11[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk11[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk12[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk12[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk12[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk12[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk13[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk13[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk13[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk13[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk21")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk21[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk21[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk21[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk21[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk22[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk22[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk22[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk22[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk23")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk23[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk23[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk23[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk23[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk31")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk31[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk31[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk31[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk31[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk32")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk32[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk32[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk32[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk32[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk33")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk33[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

SIGNAL("dk33[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

SIGNAL("dk33[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

SIGNAL("dk33[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("ek11[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek11[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek11[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek11[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek12[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek12[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 2100.0;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek12[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek12[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek13[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2300.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek13[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek13[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek13[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek21[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek21[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek21[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 4100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1800.0;
		}
	}
}

TRANSITION_LIST("ek21[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1300.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek22[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1700.0;
		}
	}
}

TRANSITION_LIST("ek22[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 2100.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek22[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek22[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek23[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 2100.0;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek23[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1400.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek23[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2300.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek23[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek31[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek31[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek31[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek31[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2300.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek32[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek32[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek32[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek32[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("ek33[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek33[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2300.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek33[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
			LEVEL 1 FOR 2100.0;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("ek33[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 1500.0;
		}
	}
}

TRANSITION_LIST("dk11[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.178;
			LEVEL 0 FOR 452.604;
			LEVEL 1 FOR 800.008;
			LEVEL 0 FOR 99.992;
			LEVEL 1 FOR 100.008;
			LEVEL 0 FOR 1999.992;
			LEVEL 1 FOR 800.008;
			LEVEL 0 FOR 99.992;
			LEVEL 1 FOR 900.008;
			LEVEL 0 FOR 2744.21;
		}
	}
}

TRANSITION_LIST("dk11[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.464;
			LEVEL 0 FOR 1352.606;
			LEVEL 1 FOR 100.006;
			LEVEL 0 FOR 999.994;
			LEVEL 1 FOR 800.006;
			LEVEL 0 FOR 199.994;
			LEVEL 1 FOR 900.006;
			LEVEL 0 FOR 99.994;
			LEVEL 1 FOR 1000.006;
			LEVEL 0 FOR 799.994;
			LEVEL 1 FOR 200.006;
			LEVEL 0 FOR 399.994;
			LEVEL 1 FOR 100.006;
			LEVEL 0 FOR 1043.924;
		}
	}
}

TRANSITION_LIST("dk11[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.361;
			LEVEL 0 FOR 452.595;
			LEVEL 1 FOR 900.017;
			LEVEL 0 FOR 2999.983;
			LEVEL 1 FOR 100.017;
			LEVEL 0 FOR 799.983;
			LEVEL 1 FOR 1200.017;
			LEVEL 0 FOR 399.983;
			LEVEL 1 FOR 1144.044;
		}
	}
}

TRANSITION_LIST("dk11[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.207;
			LEVEL 0 FOR 1352.239;
			LEVEL 1 FOR 900.01;
			LEVEL 0 FOR 199.99;
			LEVEL 1 FOR 800.01;
			LEVEL 0 FOR 1099.99;
			LEVEL 1 FOR 1000.01;
			LEVEL 0 FOR 2644.544;
		}
	}
}

TRANSITION_LIST("dk12[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.067;
			LEVEL 0 FOR 1352.593;
			LEVEL 1 FOR 100.02;
			LEVEL 0 FOR 1999.98;
			LEVEL 1 FOR 900.02;
			LEVEL 0 FOR 999.98;
			LEVEL 1 FOR 1100.02;
			LEVEL 0 FOR 399.98;
			LEVEL 1 FOR 1144.34;
		}
	}
}

TRANSITION_LIST("dk12[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.327;
			LEVEL 0 FOR 452.596;
			LEVEL 1 FOR 900.017;
			LEVEL 0 FOR 1099.983;
			LEVEL 1 FOR 800.017;
			LEVEL 0 FOR 199.983;
			LEVEL 1 FOR 800.017;
			LEVEL 0 FOR 99.983;
			LEVEL 1 FOR 100.017;
			LEVEL 0 FOR 899.983;
			LEVEL 1 FOR 100.017;
			LEVEL 0 FOR 799.983;
			LEVEL 1 FOR 200.017;
			LEVEL 0 FOR 399.983;
			LEVEL 1 FOR 100.017;
			LEVEL 0 FOR 1044.06;
		}
	}
}

TRANSITION_LIST("dk12[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.228;
			LEVEL 0 FOR 1352.219;
			LEVEL 1 FOR 900.03;
			LEVEL 0 FOR 199.97;
			LEVEL 1 FOR 800.03;
			LEVEL 0 FOR 999.97;
			LEVEL 1 FOR 200.03;
			LEVEL 0 FOR 799.97;
			LEVEL 1 FOR 1100.03;
			LEVEL 0 FOR 499.97;
			LEVEL 1 FOR 1144.553;
		}
	}
}

TRANSITION_LIST("dk12[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.03;
			LEVEL 0 FOR 2452.24;
			LEVEL 1 FOR 800.009;
			LEVEL 0 FOR 199.991;
			LEVEL 1 FOR 1900.009;
			LEVEL 0 FOR 2644.721;
		}
	}
}

TRANSITION_LIST("dk13[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.75;
			LEVEL 0 FOR 2452.42;
			LEVEL 1 FOR 800.188;
			LEVEL 0 FOR 999.812;
			LEVEL 1 FOR 200.188;
			LEVEL 0 FOR 1799.812;
			LEVEL 1 FOR 200.188;
			LEVEL 0 FOR 1541.642;
		}
	}
}

TRANSITION_LIST("dk13[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.693;
			LEVEL 0 FOR 1252.589;
			LEVEL 1 FOR 200.019;
			LEVEL 0 FOR 1999.981;
			LEVEL 1 FOR 800.019;
			LEVEL 0 FOR 199.981;
			LEVEL 1 FOR 800.019;
			LEVEL 0 FOR 99.981;
			LEVEL 1 FOR 1100.019;
			LEVEL 0 FOR 399.981;
			LEVEL 1 FOR 1143.718;
		}
	}
}

TRANSITION_LIST("dk13[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.657;
			LEVEL 0 FOR 1352.252;
			LEVEL 1 FOR 899.992;
			LEVEL 0 FOR 1200.008;
			LEVEL 1 FOR 1899.992;
			LEVEL 0 FOR 100.008;
			LEVEL 1 FOR 799.992;
			LEVEL 0 FOR 100.008;
			LEVEL 1 FOR 99.992;
			LEVEL 0 FOR 500.008;
			LEVEL 1 FOR 1044.091;
		}
	}
}

TRANSITION_LIST("dk13[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.553;
			LEVEL 0 FOR 452.173;
			LEVEL 1 FOR 1800.071;
			LEVEL 0 FOR 199.929;
			LEVEL 1 FOR 800.071;
			LEVEL 0 FOR 2099.929;
			LEVEL 1 FOR 1100.071;
			LEVEL 0 FOR 399.929;
			LEVEL 1 FOR 1143.274;
		}
	}
}

TRANSITION_LIST("dk21[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.2;
			LEVEL 0 FOR 452.605;
			LEVEL 1 FOR 800.008;
			LEVEL 0 FOR 2999.992;
			LEVEL 1 FOR 100.008;
			LEVEL 0 FOR 99.992;
			LEVEL 1 FOR 800.008;
			LEVEL 0 FOR 99.992;
			LEVEL 1 FOR 900.008;
			LEVEL 0 FOR 599.992;
			LEVEL 1 FOR 1144.195;
		}
	}
}

TRANSITION_LIST("dk21[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.209;
			LEVEL 0 FOR 1352.585;
			LEVEL 1 FOR 900.028;
			LEVEL 0 FOR 199.972;
			LEVEL 1 FOR 800.028;
			LEVEL 0 FOR 199.972;
			LEVEL 1 FOR 1900.028;
			LEVEL 0 FOR 999.972;
			LEVEL 1 FOR 100.028;
			LEVEL 0 FOR 1544.178;
		}
	}
}

TRANSITION_LIST("dk21[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.2;
			LEVEL 0 FOR 452.222;
			LEVEL 1 FOR 900.028;
			LEVEL 0 FOR 3999.972;
			LEVEL 1 FOR 100.028;
			LEVEL 0 FOR 799.972;
			LEVEL 1 FOR 200.028;
			LEVEL 0 FOR 399.972;
			LEVEL 1 FOR 100.028;
			LEVEL 0 FOR 1044.55;
		}
	}
}

TRANSITION_LIST("dk21[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.242;
			LEVEL 0 FOR 2452.218;
			LEVEL 1 FOR 800.032;
			LEVEL 0 FOR 2099.968;
			LEVEL 1 FOR 1000.032;
			LEVEL 0 FOR 499.968;
			LEVEL 1 FOR 1144.54;
		}
	}
}

TRANSITION_LIST("dk22[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.391;
			LEVEL 0 FOR 452.588;
			LEVEL 1 FOR 900.021;
			LEVEL 0 FOR 1099.979;
			LEVEL 1 FOR 800.021;
			LEVEL 0 FOR 999.979;
			LEVEL 1 FOR 1000.021;
			LEVEL 0 FOR 199.979;
			LEVEL 1 FOR 800.021;
			LEVEL 0 FOR 699.979;
			LEVEL 1 FOR 1044.021;
		}
	}
}

TRANSITION_LIST("dk22[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.273;
			LEVEL 0 FOR 1252.581;
			LEVEL 1 FOR 100.028;
			LEVEL 0 FOR 99.972;
			LEVEL 1 FOR 800.028;
			LEVEL 0 FOR 1999.972;
			LEVEL 1 FOR 100.028;
			LEVEL 0 FOR 99.972;
			LEVEL 1 FOR 2000.028;
			LEVEL 0 FOR 399.972;
			LEVEL 1 FOR 1143.146;
		}
	}
}

TRANSITION_LIST("dk22[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.214;
			LEVEL 0 FOR 2452.214;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 199.969;
			LEVEL 1 FOR 1000.031;
			LEVEL 0 FOR 799.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 999.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 1544.541;
		}
	}
}

TRANSITION_LIST("dk22[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.419;
			LEVEL 0 FOR 452.218;
			LEVEL 1 FOR 1800.027;
			LEVEL 0 FOR 2099.973;
			LEVEL 1 FOR 1000.027;
			LEVEL 0 FOR 999.973;
			LEVEL 1 FOR 100.027;
			LEVEL 0 FOR 1544.336;
		}
	}
}

TRANSITION_LIST("dk23[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.266;
			LEVEL 0 FOR 452.583;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 99.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 999.969;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 199.969;
			LEVEL 1 FOR 900.031;
			LEVEL 0 FOR 999.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 1399.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 1044.12;
		}
	}
}

TRANSITION_LIST("dk23[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.253;
			LEVEL 0 FOR 452.583;
			LEVEL 1 FOR 1800.031;
			LEVEL 0 FOR 199.969;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 199.969;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 199.969;
			LEVEL 1 FOR 900.031;
			LEVEL 0 FOR 2644.133;
		}
	}
}

TRANSITION_LIST("dk23[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.262;
			LEVEL 0 FOR 452.182;
			LEVEL 1 FOR 1800.067;
			LEVEL 0 FOR 1199.933;
			LEVEL 1 FOR 800.067;
			LEVEL 0 FOR 199.933;
			LEVEL 1 FOR 800.067;
			LEVEL 0 FOR 199.933;
			LEVEL 1 FOR 800.067;
			LEVEL 0 FOR 99.933;
			LEVEL 1 FOR 100.067;
			LEVEL 0 FOR 499.933;
			LEVEL 1 FOR 1043.556;
		}
	}
}

TRANSITION_LIST("dk23[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.288;
			LEVEL 0 FOR 3452.23;
			LEVEL 1 FOR 2900.019;
			LEVEL 0 FOR 499.981;
			LEVEL 1 FOR 1144.482;
		}
	}
}

TRANSITION_LIST("dk31[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.924;
			LEVEL 0 FOR 1352.52;
			LEVEL 1 FOR 100.091;
			LEVEL 0 FOR 999.909;
			LEVEL 1 FOR 800.091;
			LEVEL 0 FOR 1099.909;
			LEVEL 1 FOR 1100.091;
			LEVEL 0 FOR 899.909;
			LEVEL 1 FOR 100.091;
			LEVEL 0 FOR 399.909;
			LEVEL 1 FOR 100.091;
			LEVEL 0 FOR 1043.465;
		}
	}
}

TRANSITION_LIST("dk31[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.236;
			LEVEL 0 FOR 1252.58;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 99.969;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 199.969;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 999.969;
			LEVEL 1 FOR 200.031;
			LEVEL 0 FOR 899.969;
			LEVEL 1 FOR 1100.031;
			LEVEL 0 FOR 399.969;
			LEVEL 1 FOR 1144.184;
		}
	}
}

TRANSITION_LIST("dk31[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.784;
			LEVEL 0 FOR 1352.199;
			LEVEL 1 FOR 900.049;
			LEVEL 0 FOR 199.951;
			LEVEL 1 FOR 800.049;
			LEVEL 0 FOR 999.951;
			LEVEL 1 FOR 200.049;
			LEVEL 0 FOR 799.951;
			LEVEL 1 FOR 200.049;
			LEVEL 0 FOR 799.951;
			LEVEL 1 FOR 200.049;
			LEVEL 0 FOR 399.951;
			LEVEL 1 FOR 100.049;
			LEVEL 0 FOR 1043.968;
		}
	}
}

TRANSITION_LIST("dk31[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.216;
			LEVEL 0 FOR 452.214;
			LEVEL 1 FOR 1800.034;
			LEVEL 0 FOR 1199.966;
			LEVEL 1 FOR 3000.034;
			LEVEL 0 FOR 399.966;
			LEVEL 1 FOR 1143.57;
		}
	}
}

TRANSITION_LIST("dk32[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.554;
			LEVEL 0 FOR 452.61;
			LEVEL 1 FOR 799.997;
			LEVEL 0 FOR 100.003;
			LEVEL 1 FOR 899.997;
			LEVEL 0 FOR 200.003;
			LEVEL 1 FOR 799.997;
			LEVEL 0 FOR 200.003;
			LEVEL 1 FOR 999.997;
			LEVEL 0 FOR 800.003;
			LEVEL 1 FOR 99.997;
			LEVEL 0 FOR 100.003;
			LEVEL 1 FOR 899.997;
			LEVEL 0 FOR 600.003;
			LEVEL 1 FOR 1043.836;
		}
	}
}

TRANSITION_LIST("dk32[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.411;
			LEVEL 0 FOR 452.582;
			LEVEL 1 FOR 900.025;
			LEVEL 0 FOR 1099.975;
			LEVEL 1 FOR 800.025;
			LEVEL 0 FOR 999.975;
			LEVEL 1 FOR 1100.025;
			LEVEL 0 FOR 2643.982;
		}
	}
}

TRANSITION_LIST("dk32[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.82;
			LEVEL 0 FOR 452.19;
			LEVEL 1 FOR 900.054;
			LEVEL 0 FOR 1099.946;
			LEVEL 1 FOR 800.054;
			LEVEL 0 FOR 999.946;
			LEVEL 1 FOR 100.054;
			LEVEL 0 FOR 1099.946;
			LEVEL 1 FOR 800.054;
			LEVEL 0 FOR 99.946;
			LEVEL 1 FOR 100.054;
			LEVEL 0 FOR 499.946;
			LEVEL 1 FOR 1043.99;
		}
	}
}

TRANSITION_LIST("dk32[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.651;
			LEVEL 0 FOR 2452.243;
			LEVEL 1 FOR 800.001;
			LEVEL 0 FOR 199.999;
			LEVEL 1 FOR 900.001;
			LEVEL 0 FOR 999.999;
			LEVEL 1 FOR 1000.001;
			LEVEL 0 FOR 499.999;
			LEVEL 1 FOR 1144.106;
		}
	}
}

TRANSITION_LIST("dk33[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.408;
			LEVEL 0 FOR 1452.504;
			LEVEL 1 FOR 800.108;
			LEVEL 0 FOR 199.892;
			LEVEL 1 FOR 800.108;
			LEVEL 0 FOR 1099.892;
			LEVEL 1 FOR 100.108;
			LEVEL 0 FOR 899.892;
			LEVEL 1 FOR 100.108;
			LEVEL 0 FOR 899.892;
			LEVEL 1 FOR 100.108;
			LEVEL 0 FOR 399.892;
			LEVEL 1 FOR 100.108;
			LEVEL 0 FOR 1042.98;
		}
	}
}

TRANSITION_LIST("dk33[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.44;
			LEVEL 0 FOR 1252.581;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 1099.969;
			LEVEL 1 FOR 800.031;
			LEVEL 0 FOR 999.969;
			LEVEL 1 FOR 200.031;
			LEVEL 0 FOR 799.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 999.969;
			LEVEL 1 FOR 100.031;
			LEVEL 0 FOR 1543.948;
		}
	}
}

TRANSITION_LIST("dk33[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.212;
			LEVEL 0 FOR 1352.582;
			LEVEL 1 FOR 900.03;
			LEVEL 0 FOR 1999.97;
			LEVEL 1 FOR 1100.03;
			LEVEL 0 FOR 99.97;
			LEVEL 1 FOR 800.03;
			LEVEL 0 FOR 99.97;
			LEVEL 1 FOR 100.03;
			LEVEL 0 FOR 499.97;
			LEVEL 1 FOR 1044.206;
		}
	}
}

TRANSITION_LIST("dk33[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.621;
			LEVEL 0 FOR 452.129;
			LEVEL 1 FOR 900.12;
			LEVEL 0 FOR 2099.88;
			LEVEL 1 FOR 900.12;
			LEVEL 0 FOR 999.88;
			LEVEL 1 FOR 1100.12;
			LEVEL 0 FOR 399.88;
			LEVEL 1 FOR 1143.25;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ek11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek21";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek23";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek31";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek32";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek33";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dk11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk21";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
	CHILDREN = 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk23";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk31";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
	CHILDREN = 77, 78, 79, 80;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk32";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 0;
	CHILDREN = 82, 83, 84, 85;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk33";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
	CHILDREN = 87, 88, 89, 90;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 86;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
